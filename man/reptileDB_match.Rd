% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reptileDB_match.R
\name{reptileDB_match}
\alias{reptileDB_match}
\title{Resolve taxonomy to match the Reptile Database}
\usage{
reptileDB_match(
  taxon,
  fuzzyThresh = 1,
  alternateEndings = TRUE,
  retainSubspecies = FALSE,
  extendedSubspeciesSearch = TRUE,
  yearCutoff = 1950,
  version = "latest",
  nThreads = -1
)
}
\arguments{
\item{taxon}{a single taxon name}

\item{fuzzyThresh}{the acceptable number of differences \emph{per} component (genus, sp, subsp) for fuzzy matching.
If zero, no fuzzy matching. See \code{\link[stringdist]{stringdist}}.}

\item{alternateEndings}{allow for testing of alternate latin suffixes when matching to accepted names}

\item{retainSubspecies}{If subspecies provided, should subspecies be retained in result.
This only pertains to cases where the taxon matches to a known subspecies. As synonyms are mapped
to Genus_species accepted names (with no subspecies), if a taxon matches to a synonym with subspecies,
it will still map back to a Genus_species.}

\item{extendedSubspeciesSearch}{If subspecies provided, but no match, should additional searches be attempted.
See details.}

\item{yearCutoff}{When matching to synonymys, what is the earliest publication year to consider.
Can be set to NULL to be ignored}

\item{version}{which version of Reptile Database to use. Can be \code{'latest'} or a combination of month and year, such as \code{'3_2024'}. See \code{\link{reptileDB_versions}} for available versions.}

\item{nThreads}{number of threads for parallelization. If negative, will be inferred automatically.}
}
\value{
A dataframe with matches to either accepted taxon names or synonyms.
Authority and year pertain to the accepted name if directly matched, otherwise pertain to the synonym.
If a synonym was listed multiple times with different years under the same accepted name, then the oldest authority/year is listed.
}
\description{
This function will attempt to assign taxon names to a set of Reptile Database accepted names, using both strict and fuzzy matching, and via synonymy.
}
\details{
\strong{Note: The results from this function should be considered as a first pass.} Frequently, additional information
may be needed to definitively resolve taxonomy (geographic information, morphology, etc).

This function makes the following attempts (assuming all options enabled):
\itemize{
\item strict matching to accepted names
\item strict matching to accepted names, but with alternate latin suffixes
\item fuzzy matching to accepted names
\item strict matching to synonyms
\item fuzzy matching to synonyms
\item if extendedSubspeciesSearch = TRUE and subspecies present, then repeat previous steps:
\itemize{
\item with Genus_subspecies (subspecies tested as species name)
\item with Genus_species (subspecies omitted)
}
}

If a taxon has equal fuzzy matching distance to more than one accepted taxon name, then the soundex
index from the stringdist package will be used to attempt to identify the more likely match according to phonetics.

It is possible to match to both an accepted name and to the synonym of another accepted name.

Note regarding parallelization: Parallelization will only be enabled if a reasonably large number of
taxa are being evaluated.
}
\examples{

# exact matching to accepted name
reptileDB_match('Lachesis stenophrys')

# fuzzy matching to accepted name
reptileDB_match('Anolis saxitilis')

# exact matching to synonyms
reptileDB_match('Japalura planidorsata')

# fuzzy matching to synonyms
reptileDB_match('Amphisbaena mensa')

# matching via alternate latin suffixes
reptileDB_match('Magliophis exiguum')

# inclusion of subspecies
reptileDB_match('Phrynosoma coronatum blainvillii')

# multiple hits
reptileDB_match('Chironius flavolineatus')

# an example where the subspecies doesn't match as a subspecies, 
# but does as a species
# (this will not match if extendedSubspeciesSearch = FALSE)
reptileDB_match('Kinyongia fischeri vosseleri')

# querying multiple taxa
lapply(c('Coluber_constrictor', 'Anolis saxitilis', 'Xenochrophis flavipunctatus'), reptileDB_match) 

# query a taxon that did not yet exist (described in 2022)
reptileDB_match('Abronia zongolica', version = 'latest')
reptileDB_match('Abronia zongolica', version = '1_2020')

}
